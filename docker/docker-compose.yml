---
version: "3.8"

services:
  s3_dev:
    image: minio/minio
    hostname: s3_dev
    restart: unless-stopped
    environment:
      MINIO_ACCESS_KEY_FILE: s3-access
      MINIO_SECRET_KEY_FILE: s3-secret
      MINIO_DOMAIN: localhost
    command: server /data --console-address :9001
    volumes:
      - s3_dev_data:/data
    secrets:
      - s3-access
      - s3-secret
    ports:
      - 9000:9000
      - 9001:9001

  s3_createbuckets:
    image: minio/mc
    depends_on:
      - s3_dev
    links:
      - s3_dev:s3-dev
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add dev http://s3-dev:9000 $(cat /run/secrets/s3-access) $(cat /run/secrets/s3-secret);
      [ -f /buckets/created ] && exit 0;
      touch /buckets/created;
      /usr/bin/mc mb dev/gcc-static;
      /usr/bin/mc anonymous set-json /policies/public-read.json dev/gcc-static;
      /usr/bin/mc mb dev/gcc-media;
      exit 0;
      "
    secrets:
      - s3-access
      - s3-secret
    volumes:
      - s3_do_create_buckets:/buckets
      - ./config/s3-public-readonly.json:/policies/public-read.json

  db_dev:
    image: postgres:16
    hostname: db_dev
    restart: unless-stopped
    shm_size: 256M
    environment:
      POSTGRES_USER: gccsite_dev
      POSTGRES_DB: gccsite_dev
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-passwd
    secrets:
      - postgres-passwd
    volumes:
      - db_dev_data:/var/lib/postgresql/data

  db_dev_adminer:
    image: adminer
    hostname: db_adminer_dev
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: db_dev
    ports:
      - $ADMINER_PORT:8080
    depends_on:
      - db_dev

  redis_dev:
    image: redis:7
    hostname: redis_dev
    restart: unless-stopped
    volumes:
      - redis_dev_data:/data

  backend_dev: &backend_dev
    image: backend_dev
    build:
      context: ../website
      args:
        DJANGO_UID: 1000
        DJANGO_GID: 1000
        BUILDKIT_INLINE_CACHE: 1
    restart: unless-stopped
    links:
      - s3_dev:s3-dev
    environment:
      DEV: 1
      DJANGO_DEBUG: 1
      DJANGO_SETTINGS_MODULE: gccsite.settings.dev
      DJANGO_SECRET_KEY_FILE: /run/secrets/django-secret-key
      DB_NAME: gccsite_dev
      DB_USER: gccsite_dev
      DB_HOST: db_dev
      DB_PASSWORD_FILE: /run/secrets/postgres-passwd
      DJANGO_CACHE_URL: redis://redis_dev:6379/0
      CELERY_BROKER_URL: redis://redis_dev:6379/1
      CELERY_RESULT_EXPIRES: 60
      OIDC_OP_CONFIG_URL: https://auth.prologin.org/application/o/prologin-public-test-client
      OIDC_RP_CLIENT_ID_FILE: /run/secrets/oidc-client-id
      OIDC_RP_CLIENT_SECRET_FILE: /run/secrets/oidc-client-secret
      DJANGO_S3_URL: http://s3-dev:9000
      DJANGO_S3_STATIC_BUCKET: gcc-static
      DJANGO_S3_MEDIA_BUCKET: gcc-media
      DJANGO_S3_ACCESS_KEY_FILE: /run/secrets/s3-access
      DJANGO_S3_SECRET_KEY_FILE: /run/secrets/s3-secret
      DJANGO_S3_SECURE_URLS: false
      DJANGO_S3_CUSTOM_DOMAIN: localhost:9000
      DOCUMENTS_GENERATOR_DOCUMENTS_GCC_ENDPOINT: https://documents.prologin.org/rest/generator/templates/6/render/
      OIDC_DOCUMENTS_GENERATOR_RP_CLIENT_ID_FILE: /run/secrets/documents-generator-client-id
      OIDC_DOCUMENTS_GENERATOR_M2M_USERNAME_FILE: /run/secrets/documents-generator-username
      OIDC_DOCUMENTS_GENERATOR_M2M_PASSWORD_FILE: /run/secrets/documents-generator-password
    depends_on:
      - db_dev
      - redis_dev
    volumes:
      - type: bind
        source: ../website
        target: /app/gccsite/
      - type: bind
        source: ./volumes/ipython
        target: /app/.ipython
      - type: bind
        source: ./config/cors.json
        target: /app/cors.json
    secrets:
      - django-secret-key
      - postgres-passwd
      - oidc-client-id
      - oidc-client-secret
      - documents-generator-client-id
      - documents-generator-username
      - documents-generator-password
      - s3-access
      - s3-secret

  celery_dev: &celery_dev
    <<: *backend_dev
    command: celery -A gccsite worker -l DEBUG --concurrency=2

  celery_beat_dev:
    <<: *celery_dev
    command: celery -A gccsite beat -l DEBUG -S django

  celery_dev_flower:
    image: mher/flower:latest
    restart: unless-stopped
    environment:
      CELERY_BROKER_URL: redis://redis_dev:6379/1
    ports:
      - $FLOWER_PORT:5555
    depends_on:
      - redis_dev
      - celery_dev

  reverse_dev:
    image: nginx
    ports:
      - 0.0.0.0:$REVERSE_PORT:80
    restart: unless-stopped
    depends_on:
      - backend_dev
    volumes:
      - type: bind
        source: ./config/nginx.conf
        target: /etc/nginx/nginx.conf

volumes:
  db_dev_data: {}
  s3_dev_data: {}
  s3_do_create_buckets: {}
  redis_dev_data: {}

secrets:
  s3-access:
   file: ./secrets/s3-access
  s3-secret:
    file: ./secrets/s3-secret
  django-secret-key:
    file: ./secrets/django-secret-key
  postgres-passwd:
    file: ./secrets/postgres-passwd
  oidc-client-id:
    file: ./secrets/oidc-client-id
  oidc-client-secret:
    file: ./secrets/oidc-client-secret
  documents-generator-client-id:
    file: ./secrets/documents-generator-client-id
  documents-generator-username:
    file: ./secrets/documents-generator-username
  documents-generator-password:
    file: ./secrets/documents-generator-password
