stages:
  - lint
  - build

# Lints the API with multiple tools, according to pre-commit config
api-lint:
  stage: lint

  image: "python:3.10-bullseye"

  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"

  allow_failure: true

  before_script:
    - python -V # Print out python version for debugging
    - python -m venv venv
    - source venv/bin/activate
    - pip install pre-commit
    - cd api

  script:
    - pre-commit run -a

  cache:
    paths:
      - ${PIP_CACHE_DIR}
      - ${PRE_COMMIT_HOME}
      - venv/

# Tests that yarn install and yarn build are successful
test-yarn:
  stage: build

  rules:
    - changes:
      - front/**

  image:
    name: j4m3s/gcc-build:17.9-alpine3.14
    entrypoint: [""]

  variables:
    # Without this it will not work
    # Note that this is not a problem for production since SSL is not handled by
    # the front and we're only building static assets
    NODE_OPTIONS: "--openssl-legacy-provider"

  before_script:
    - cd front

  script:
    - yarn install
    - yarn build

  cache:
    key: gcc-yarn
    paths:
      - front/node_modules/
